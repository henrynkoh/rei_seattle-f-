"use client";
import React, { useState } from "react";
import Link from "next/link";
import { useRouter } from "next/navigation";

const Header: React.FC = () => {
  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);
  const router = useRouter();

  const toggleDropdown = (menu: string) => {
    if (activeDropdown === menu) {
      setActiveDropdown(null);
    } else {
      setActiveDropdown(menu);
    }
  };

  const handleNavigation = (path: string) => {
    router.push(path);
    setActiveDropdown(null); // Close dropdown after navigation
  };

  return (
    <header className="flex justify-between items-center px-2.5 w-full bg-white border border-neutral-100 h-[51px] z-50 relative">
      <Link href="/" className="flex items-center h-[30px] w-[230px]">
        <div
          dangerouslySetInnerHTML={{
            __html:
              "<svg id=&quot;6:77&quot; layer-name=&quot;5a782eebd8030000011ac577_Pellego%20Logo.svg&quot; width=&quot;122&quot; height=&quot;31&quot; viewBox=&quot;0 0 122 31&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; class=&quot;w-[121px] h-[30px]&quot;> <g clip-path=&quot;url(#clip0_6_77)&quot;> <path d=&quot;M143.973 5.70522C139.75 2.30504 133.744 2.30504 129.521 5.70522C127.374 7.49142 126.3 9.66961 126.3 12.2398V17.341C126.3 19.926 127.369 22.1042 129.508 23.8755C133.74 27.2485 139.728 27.2485 143.96 23.8755C146.107 22.1063 147.181 19.9281 147.181 17.341V12.2398C147.181 9.66749 146.112 7.4893 143.973 5.70522ZM142.84 17.341C142.84 18.5911 142.295 19.659 141.205 20.5447C139.947 21.5739 138.362 22.1132 136.74 22.0639C135.119 22.1075 133.536 21.5701 132.273 20.5479C131.183 19.6346 130.638 18.5667 130.638 17.3441V12.2398C130.638 11.0172 131.183 9.9493 132.273 9.03607C133.536 8.01355 135.119 7.4761 136.74 7.52002C138.36 7.47028 139.944 8.00848 141.201 9.03607C142.292 9.93659 142.837 11.0045 142.837 12.2398L142.84 17.341ZM48.9201 17.2361C49.177 17.2696 49.4361 17.2834 49.6952 17.2774H54.9376C55.9067 17.2854 56.8727 17.1646 57.8103 16.9182C58.7531 16.6735 59.6375 16.2412 60.4109 15.6469C61.1683 15.098 61.7924 14.3842 62.2364 13.5588C62.7509 12.5711 63.0108 11.4696 62.9926 10.3551C63.0056 8.99108 62.5782 7.6596 61.7745 6.56018C61.0549 5.60101 60.1306 4.81585 59.0695 4.26227C58.1779 3.82745 57.2267 3.52858 56.2474 3.37553C55.272 3.22168 54.2861 3.14411 53.2987 3.14351C51.5521 3.11105 49.821 3.47841 48.2367 4.21778C46.6496 4.93015 45.3587 6.17521 44.5857 7.73933C44.1055 8.73861 43.8546 9.83342 43.8517 10.943V18.0592C43.836 19.3562 44.1174 20.6394 44.6743 21.8096C45.1885 22.9948 46.0336 24.0049 47.1072 24.7178C48.0515 25.3638 49.1139 25.8153 50.233 26.0463C51.3397 26.3027 52.4732 26.4233 53.6088 26.4055C55.0573 26.4179 56.4974 26.1825 57.8673 25.7094C59.2548 25.2693 60.5196 24.5071 61.5594 23.4846C61.5151 23.5291 61.9928 23.1032 61.9928 23.1032C62.9364 22.3642 63.1049 20.9967 62.3693 20.0489C61.6337 19.101 60.2725 18.9317 59.3289 19.6706L58.1963 20.6241C58.0371 20.7511 57.8879 20.8903 57.7502 21.0405C57.1835 21.4304 56.5477 21.7077 55.8772 21.8573C54.8479 22.1104 53.7821 22.1782 52.7293 22.0575C51.6887 22.0105 50.6744 21.7141 49.7711 21.193C48.7355 20.5743 48.2177 19.7522 48.2177 18.7267V16.8992C48.4158 17.0754 48.6591 17.1921 48.9201 17.2361ZM49.1922 8.80406C49.829 8.28771 50.5762 7.92654 51.3752 7.74886C52.4683 7.50054 53.593 7.42229 54.7098 7.51685C55.2766 7.56317 55.8379 7.66212 56.3866 7.81243C56.9417 7.9568 57.4581 8.22271 57.8989 8.59111C58.4758 9.08528 58.767 9.83755 58.674 10.5934C58.6065 11.3614 58.1677 12.0469 57.5003 12.4273C56.8587 12.7814 56.1343 12.9559 55.4027 12.9327C55.4027 12.9327 51.6378 12.9327 50.3058 12.8564C48.1956 12.7451 48.2082 10.8668 48.2082 10.8668C48.2093 10.0652 48.5709 9.30707 49.1922 8.80406ZM38.527 5.70522C34.3125 2.30498 28.3116 2.30498 24.097 5.70522C21.9583 7.4893 20.8889 9.66749 20.8889 12.2398L20.9174 32.1105C20.9174 33.312 21.887 34.286 23.083 34.286C24.279 34.286 25.2486 33.312 25.2486 32.1105L25.2296 24.6955C27.054 25.8358 29.1651 26.428 31.3136 26.4023C34.1251 26.4023 36.5307 25.5547 38.5302 23.8596C40.6837 22.0883 41.7604 19.9101 41.7604 17.3251V12.2398C41.7583 9.66749 40.6805 7.4893 38.527 5.70522ZM37.4165 17.341C37.4165 18.5635 36.8713 19.6314 35.7809 20.5447C34.5206 21.5712 32.9354 22.1092 31.3136 22.0607C29.6972 22.112 28.117 21.5734 26.8653 20.5447C25.7749 19.659 25.2296 18.5911 25.2296 17.341V12.2398C25.2296 11.0024 25.7749 9.93447 26.8653 9.03607C28.117 8.00732 29.6972 7.46876 31.3136 7.52002C32.9354 7.47159 34.5206 8.00956 35.7809 9.03607C36.8713 9.9493 37.4165 11.0172 37.4165 12.2398V17.341ZM67.9281 -4.2937C67.3536 -4.2937 66.8027 -4.06422 66.3968 -3.65584C65.9909 -3.24745 65.7632 -2.69368 65.7641 -2.11656V23.8469C65.7641 25.0484 66.7336 26.0225 67.9297 26.0225C69.1257 26.0225 70.0953 25.0484 70.0953 23.8469V-2.11974C70.0953 -2.69686 69.8669 -3.2503 69.4603 -3.65809C69.0538 -4.06587 68.5026 -4.29454 67.9281 -4.2937ZM86.9646 17.2361C87.2216 17.2696 87.4807 17.2834 87.7397 17.2774H92.9853C93.9544 17.2854 94.9204 17.1646 95.858 16.9182C96.8008 16.6735 97.6852 16.2412 98.4586 15.6469C99.216 15.0979 99.84 14.3841 100.284 13.5588C100.799 12.5714 101.059 11.4697 101.04 10.3551C101.054 8.99148 100.628 7.6601 99.8254 6.56018C99.1056 5.60116 98.1813 4.81603 97.1204 4.26227C96.2288 3.82741 95.2776 3.52854 94.2983 3.37553C93.3239 3.22184 92.3391 3.14427 91.3528 3.14351C89.6061 3.11116 87.8751 3.47852 86.2907 4.21778C84.702 4.93254 83.411 6.18118 82.6397 7.74886C82.1595 8.74814 81.9087 9.84296 81.9057 10.9526V18.0592C81.8821 19.3542 82.1549 20.6373 82.703 21.8096C83.2164 22.9953 84.0617 24.0056 85.1359 24.7178C86.0802 25.3638 87.1427 25.8153 88.2618 26.0463C89.3684 26.3026 90.5019 26.4232 91.6375 26.4055C93.086 26.4178 94.5261 26.1825 95.896 25.7094C97.2835 25.2694 98.5484 24.5072 99.5881 23.4846C99.5438 23.5291 100.022 23.1032 100.022 23.1032C100.965 22.3642 101.134 20.9967 100.398 20.0489C99.6624 19.101 98.3012 18.9317 97.3576 19.6706L96.2218 20.6241C96.0627 20.7511 95.9135 20.8903 95.7757 21.0405C95.2091 21.4304 94.5733 21.7077 93.9028 21.8573C92.8745 22.11 91.8098 22.1778 90.758 22.0575C89.7174 22.0106 88.7031 21.7142 87.7998 21.193C86.7642 20.5743 86.2464 19.7522 86.2464 18.7267V16.8992C86.4489 17.0781 86.6981 17.195 86.9646 17.2361ZM87.2367 8.80406C87.8726 8.28815 88.6186 7.92701 89.4165 7.74886C90.514 7.5003 91.643 7.42311 92.7638 7.52002C93.3306 7.56639 93.892 7.66533 94.4406 7.81561C94.9865 7.96248 95.4939 8.22713 95.9276 8.59111C96.5045 9.08528 96.7957 9.83755 96.7027 10.5934C96.6352 11.3614 96.1964 12.0469 95.529 12.4273C94.8874 12.7814 94.163 12.9559 93.4314 12.9327C93.4314 12.9327 89.6665 12.9327 88.3345 12.8564C86.2243 12.7451 86.2369 10.8668 86.2369 10.8668C86.2426 10.062 86.6115 9.30329 87.2399 8.80406H87.2367ZM120.719 5.70522C116.496 2.30504 110.49 2.30504 106.267 5.70522C104.128 7.4893 103.059 9.66749 103.059 12.2398V17.341C103.059 19.926 104.128 22.1042 106.267 23.8755C108.294 25.5724 110.864 26.4755 113.502 26.4182C115.651 26.4476 117.764 25.8551 119.586 24.7114V26.148C119.586 28.055 118.544 29.2988 116.461 29.8793C115.341 30.1972 113.088 30.3211 111.661 30.2798L111.345 30.2607C111.016 30.1462 110.699 30.0026 110.396 29.8316L109.13 29.2977C108.583 29.1219 107.99 29.1715 107.479 29.4355C106.969 29.6996 106.584 30.1565 106.409 30.7057C106.045 31.8499 106.817 33.0036 107.811 33.4549C108.342 33.8032 108.927 34.061 109.541 34.2177C110.639 34.4884 111.769 34.6018 112.898 34.5546C114.24 34.5546 116.48 34.3861 117.644 34.0492C118.777 33.7077 119.846 33.1804 120.808 32.4887C121.785 31.7954 122.574 30.8679 123.105 29.7903C123.645 28.6526 123.918 27.4053 123.902 26.1448V12.2398C123.921 9.66749 122.86 7.4893 120.719 5.70522ZM119.586 17.341C119.586 18.5911 119.041 19.659 117.951 20.5447C116.697 21.5691 115.118 22.1071 113.502 22.0607C111.881 22.1044 110.298 21.5669 109.035 20.5447C107.945 19.6314 107.399 18.5635 107.399 17.341V12.2398C107.399 11.0172 107.945 9.9493 109.035 9.03607C110.298 8.0138 111.881 7.47638 113.502 7.52002C115.118 7.47364 116.697 8.01163 117.951 9.03607C119.041 9.93659 119.586 11.0045 119.586 12.2398V17.341ZM76.8753 -4.29687C76.3008 -4.29688 75.7499 -4.0674 75.344 -3.65902C74.938 -3.25063 74.7104 -2.69686 74.7113 -2.11974V23.8469C74.7113 25.0484 75.6808 26.0225 76.8769 26.0225C78.0729 26.0225 79.0425 25.0484 79.0425 23.8469V-2.11974C79.0425 -2.69741 78.8136 -3.25133 78.4064 -3.65921C77.9992 -4.06709 77.4472 -4.29539 76.8721 -4.2937L76.8753 -4.29687Z&quot; fill=&quot;#616A73&quot;></path> <path d=&quot;M-4.98932 36.2697C6.79221 36.2697 16.343 26.7089 16.343 14.9151C16.343 3.12131 6.79221 -6.43945 -4.98932 -6.43945C-16.7708 -6.43945 -26.3217 3.12131 -26.3217 14.9151C-26.3217 26.7089 -16.7708 36.2697 -4.98932 36.2697Z&quot; fill=&quot;#5AC1A4&quot;></path> <path d=&quot;M5.53467 11.9517L9.71965 15.4518C10.6285 16.257 10.7312 17.6404 9.95124 18.5712C9.17122 19.5021 7.79244 19.6414 6.84228 18.8855L-4.98936 8.95755L-16.8084 18.8855C-17.7556 19.6818 -19.1683 19.5586 -19.9637 18.6104C-20.7591 17.6622 -20.6361 16.2481 -19.6889 15.4518L-6.68231 4.52792C-6.21274 4.1311 -5.59938 3.94782 -4.98936 4.02204C-4.37934 3.94782 -3.76598 4.1311 -3.29642 4.52792L0.992788 8.13233V7.11108C0.992788 5.91581 1.96074 4.94685 3.15476 4.94685C4.34879 4.94685 5.31674 5.91581 5.31674 7.11108V11.7684L5.53467 11.9517ZM-3.47014 14.987L3.74066 21.045C4.68873 21.8412 4.81246 23.2561 4.01703 24.2052C3.22159 25.1542 1.8082 25.2781 0.860132 24.4818L-4.98936 19.5653L-10.8452 24.4818C-11.7958 25.2421 -13.179 25.1034 -13.96 24.1694C-14.7411 23.2355 -14.6342 21.848 -13.7194 21.045L-6.50227 14.987C-6.11205 14.6603 -5.62122 14.4783 -5.11254 14.4717C-5.07148 14.4717 -5.02726 14.4717 -4.9862 14.4717C-4.94514 14.4717 -4.90092 14.4717 -4.85986 14.4717C-4.35119 14.4783 -3.86035 14.6603 -3.47014 14.987Z&quot; fill=&quot;white&quot;></path> </g> <defs> <clipPath id=&quot;clip0_6_77&quot;> <rect width=&quot;174&quot; height=&quot;43&quot; fill=&quot;white&quot; transform=&quot;translate(-26.3051 -6.43945)&quot;></rect> </clipPath> </defs> </svg>",
          }}
        />
      </Link>
      <nav className="flex gap-5 items-center">
        <div className="relative">
          <NavItem 
            label="solutions" 
            isActive={activeDropdown === 'solutions'} 
            onClick={() => toggleDropdown('solutions')} 
          />
          {activeDropdown === 'solutions' && (
            <div className="absolute top-[51px] left-0 bg-white shadow-lg rounded-b-md w-64 py-2 z-20">
              <div 
                onClick={() => handleNavigation('/solutions/investment-analysis')} 
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Investment Analysis
              </div>
              <div
                onClick={() => handleNavigation('/solutions/property-research')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Property Research
              </div>
              <div
                onClick={() => handleNavigation('/solutions/market-intelligence')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Market Intelligence
              </div>
              <div
                onClick={() => handleNavigation('/solutions/nwmls-integration')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                NWMLS Integration
              </div>
            </div>
          )}
        </div>
        <div className="relative">
          <NavItem 
            label="features" 
            isActive={activeDropdown === 'features'} 
            onClick={() => toggleDropdown('features')} 
          />
          {activeDropdown === 'features' && (
            <div className="absolute top-[51px] left-0 bg-white shadow-lg rounded-b-md w-64 py-2 z-20">
              <div 
                onClick={() => handleNavigation('/features/property-analysis')} 
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Property Analysis
              </div>
              <div 
                onClick={() => handleNavigation('/features/property-search')} 
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Property Search
              </div>
              <div
                onClick={() => handleNavigation('/features/financial-calculator')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Financial Calculator
              </div>
              <div
                onClick={() => handleNavigation('/features/market-reports')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Market Reports
              </div>
              <div
                onClick={() => handleNavigation('/features/investment-alerts')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Investment Alerts
              </div>
              <div
                onClick={() => handleNavigation('/features/portfolio-tracker')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Portfolio Tracker
              </div>
              <div
                onClick={() => handleNavigation('/features/comparable-sales')}
                className="block px-4 py-2 hover:bg-gray-100 cursor-pointer"
              >
                Comparable Sales
              </div>
            </div>
          )}
        </div>
        <NavItem label="company" isActive={activeDropdown === 'company'} onClick={() => toggleDropdown('company')} />
        <div className="mx-5 w-px h-10 bg-neutral-400 bg-opacity-30" />
        <NavItem label="account" isActive={activeDropdown === 'account'} onClick={() => toggleDropdown('account')} />
      </nav>
    </header>
  );
};

interface NavItemProps {
  label: string;
  isActive?: boolean;
  onClick?: () => void;
}

const NavItem: React.FC<NavItemProps> = ({ label, isActive = false, onClick }) => {
  return (
    <div 
      className={`flex gap-1 items-center cursor-pointer h-[51px] ${isActive ? 'text-blue-600' : 'text-zinc-700 text-opacity-80'}`}
      onClick={onClick}
    >
      <div className="text-sm font-medium tracking-widest uppercase">
        {label}
      </div>
      <div
        dangerouslySetInnerHTML={{
          __html:
            `<svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-[15px] h-[13px] ${isActive ? 'transform rotate-180' : ''}"> <path d="M11.302 4.30859L7.7854 7.8252L4.2561 4.30859L3.08813 5.47656L7.77271 10.4023L12.47 5.47656L11.302 4.30859Z" fill="${isActive ? '#2563EB' : '#404648'}" fill-opacity="${isActive ? '1' : '0.8'}"></path> </svg>`,
        }}
      />
    </div>
  );
};

export default Header; 